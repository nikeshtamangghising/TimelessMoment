services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application (Development)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ecommerce-app-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
    env_file:
      - .env.docker
    ports:
      - "3000:3000"
    volumes:
      # Hot reload support
      - ./src:/app/src
      - ./public:/app/public
      - ./prisma:/app/prisma
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce-network
    command: npm run dev

  # Adminer (Database Management UI)
  adminer:
    image: adminer:4.8.1
    container_name: ecommerce-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - ecommerce-network
    depends_on:
      - postgres

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ecommerce-network:
    driver: bridge